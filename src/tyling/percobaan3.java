/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tyling;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.apache.poi.xwpf.extractor.XWPFWordExtractor;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import pertemunf5.ktp1;

/**
 *
 * @author Cyber Play
 */
public class percobaan3 extends javax.swing.JFrame {

    /**
     * Creates new form percobaan3
     */
    public percobaan3() {
        initComponents();
        this.setLocationRelativeTo(this);
        pathfileconvert.setEnabled(false);
        pathfileopen.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pathfileopen = new javax.swing.JTextField();
        pathfileconvert = new javax.swing.JTextField();
        tombolcari = new javax.swing.JButton();
        tombolconvert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pathfileconvert.setText("jTextField1");

        tombolcari.setText("cari");
        tombolcari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolcariActionPerformed(evt);
            }
        });

        tombolconvert.setText("conv");
        tombolconvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolconvertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pathfileconvert, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tombolconvert, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pathfileopen, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tombolcari)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathfileopen, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tombolcari))
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathfileconvert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tombolconvert))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
void bca(){
String FilePath =pathfileopen.getText();
        FileInputStream fis;
        String outPut = null;

        if (FilePath.substring(FilePath.length() - 1).equals("o")) { // is a
            //jika file doc
            try {
                fis = new FileInputStream(new java.io.File(FilePath));
                XWPFDocument doc = new XWPFDocument();
                XWPFWordExtractor extract = new XWPFWordExtractor(doc);
                String f=extract.getText();
                 System.out.println(f);
                outPut = extract.getText();
  
            } catch (IOException e) {
            }
        } else { // jika file brupa txt
            BufferedReader br = null;
            String content = null;
            try { 
                br = new BufferedReader(new FileReader(FilePath));
                StringBuilder sb = new StringBuilder();
                String line = br.readLine();

                while (line != null) {
                    sb.append(line);
                    line = br.readLine();
                    sb.append(System.lineSeparator());
                }
                content = sb.toString();
            } catch (FileNotFoundException e) {
            } catch (IOException e) {
            } finally {
                try {
                    br.close();
                } catch (IOException e) {
                }
            }
   
        }
    




}
    private static String MembacaDocOrTxtFile() {
        return null;
   
        
//    String FilePath = "F:\\thetextfile.txt";
//        FileInputStream fis;
//        String outPut = null;
//
//        if (FilePath.substring(FilePath.length() - 1).equals("o")) { // is a
//            //jika file doc
//            try {
//                fis = new FileInputStream(new java.io.File(FilePath));
//                XWPFDocument doc = new XWPFDocument();
//                XWPFWordExtractor extract = new XWPFWordExtractor(doc);
//                String f=extract.getText();
//                 System.out.println(f);
//                outPut = extract.getText();
//                return outPut;
//            } catch (IOException e) {
//            }
//        } else { // jika file brupa txt
//            BufferedReader br = null;
//            String content = null;
//            try { 
//                br = new BufferedReader(new FileReader(FilePath));
//                StringBuilder sb = new StringBuilder();
//                String line = br.readLine();
//
//                while (line != null) {
//                    sb.append(line);
//                    line = br.readLine();
//                    sb.append(System.lineSeparator());
//                }
//                content = sb.toString();
//            } catch (FileNotFoundException e) {
//            } catch (IOException e) {
//            } finally {
//                try {
//                    br.close();
//                } catch (IOException e) {
//                }
//            }
//            return content;
//        }
//        return null;
    }

    public static void MencetakToTxtOrdocfile(String str) {
        String FilePath = "thetextfile.txt";
        String FilePath2 = "thetextfile.doc";

        try {

            if (FilePath == FilePath2) {
//                 String outDocEn = "F://thetextfile.txt";
//                 XWPFDocument document = new XWPFDocument();
//        FileOutputStream out = new FileOutputStream(new File(outDocEn));
//        XWPFParagraph paragraph = document.createParagraph();
//        XWPFRun run = paragraph.createRun();
//        run.setText(str);
                java.io.File newTextFile1 = new java.io.File("F://thetextfile.txt");
                try ( FileWriter fw1 = new FileWriter(newTextFile1)) {
                    fw1.write(str);

                }
            } else {
                java.io.File newTextFile2 = new java.io.File("F://thetextfile.doc");
                try ( FileWriter fw2 = new FileWriter(newTextFile2)) {
                    fw2.write(str);
                }
            }

        } catch (IOException iox) {
            // do stuff with exception

        }
    }

    
    private void tombolcariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolcariActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser("");
        File filenya;

        int bukadialog = chooser.showOpenDialog(this);
        if (bukadialog == JFileChooser.APPROVE_OPTION) {
            filenya = chooser.getSelectedFile();
            pathfileopen.setText(filenya.getPath());
            bca();
        }
    }//GEN-LAST:event_tombolcariActionPerformed

    private void tombolconvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolconvertActionPerformed
        // TODO add your handling code here:
        
        
//        System.out.println(bca());
        System.out.println("Generate DOC sukses!");
        MencetakToTxtOrdocfile(MembacaDocOrTxtFile());
        pathfileconvert.setText("F://thetextfile.txt");
    }//GEN-LAST:event_tombolconvertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(percobaan3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(percobaan3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(percobaan3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(percobaan3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new percobaan3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField pathfileconvert;
    private javax.swing.JTextField pathfileopen;
    private javax.swing.JButton tombolcari;
    private javax.swing.JButton tombolconvert;
    // End of variables declaration//GEN-END:variables
}
